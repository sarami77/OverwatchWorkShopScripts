// A script as player regeneration functions

import "Utility.ostw";

// Function enable team
// Set team in import destination parent file
globalvar define Regeneration_enableTeam;
globalvar define Regeneration_needTeamBalance;
globalvar define Regeneration_regenerationRate;
globalvar define Regeneration_waitRegenTime;
define Regeneration_isEnableTeam:
    Regeneration_enableTeam == TeamOf() ||
    Regeneration_enableTeam == Team.All;

globalvar define playerRegenerationRate1;
globalvar define playerRegenerationRate2;
playervar define waitRegeneration;

rule: "Player/Regeneration/updateRate //if there are few players, incrase regeneration rate for fair play."
Event.OngoingGlobal
{
    // If don't enough players, adjust player regeneration rate to make the game fair
    WaitUpdateLongCycle();
    // Multiply heal unit
    playerRegenerationRate1 = (Regeneration_regenerationRate / 5);
    // Apply balance multiplier
    if(Regeneration_needTeamBalance){
        playerRegenerationRate1 *= ConvertToBalancedValue(0.75, Team.Team1);  // TAG player regeneration scale
        playerRegenerationRate2 *= ConvertToBalancedValue(0.75, Team.Team2);  // TAG player regeneration scale
    }
    LoopIfConditionIsTrue();
}

rule: "Player/Regeneration/waitRegenerate //by taken damage"
Event.OnDamageTaken
if(
    Regeneration_isEnableTeam &&
    IsAlive(EventPlayer())
){
    // Stop regeneration when player receives damage
    // Resume regeneration over time
    waitRegeneration = true;
    Wait(Regeneration_waitRegenTime, WaitBehavior.RestartWhenTrue);  // TAG wait regenenation timer
    waitRegeneration = false;
}

rule: "Player/Regeneration/regenerate //heal if not damaged for a short time"
Event.OngoingPlayer
if(
    Regeneration_isEnableTeam &&
    !waitRegeneration &&
    IsAlive(EventPlayer()) &&
    Health(EventPlayer()) < MaxHealth(EventPlayer())
){
    // Heal until the player's health is maximized
    WaitUpdateShortCycle();
    if(TeamOf() == Team.Team1)
        Heal(EventPlayer(), null, playerRegenerationRate1);
    else if(TeamOf() == Team.Team2)
        Heal(EventPlayer(), null, playerRegenerationRate2);
    LoopIfConditionIsTrue();
}

