import "Utility.del";

// TAG ServerOverLoadMeasures ----------
globalvar define gameLogicSpeed = 100;
globalvar define slowControlHandler;
enum SlowControlHandler{
    None,
    ServerOverLoadMeasures,
    GameEnd
}

rule: "ServerOverLoadMeasures/increaseGameLogicSpeed"
Event.OngoingGlobal
if(
    slowControlHandler == SlowControlHandler.ServerOverLoadMeasures &&
    !isServerOverLoading() &&
    gameLogicSpeed < DefaultPercentage()
){
    Wait(0.2 * (gameLogicSpeed / 100), WaitBehavior.AbortWhenFalse);
    // increase slow level
    gameLogicSpeed += 1;
    gameLogicSpeed = Min(gameLogicSpeed, DefaultPercentage());
    // apply slow level
    SetSlowMotion(gameLogicSpeed);

    LoopIfConditionIsTrue();
}

rule: "ServerOverLoadMeasures/decreaseGameLogicSpeed"
Event.OngoingGlobal
if(
    slowControlHandler == SlowControlHandler.ServerOverLoadMeasures &&
    isServerOverLoading() &&
    gameLogicSpeed > 0
){
    Wait(0.2 * (gameLogicSpeed / 100), WaitBehavior.AbortWhenFalse);
    // decrease slow level
    gameLogicSpeed -= 1;
    gameLogicSpeed = Max(gameLogicSpeed, 0);
    // apply slow level
    SetSlowMotion(gameLogicSpeed);

    LoopIfConditionIsTrue();
}
