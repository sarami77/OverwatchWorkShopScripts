import "Utility.del";
// import "../Lib/TuneVal.del";

// TAG ServerOverloading ----------
globalvar define countWaitActionByServerLoad;

define waitTime: 1.0;

void WaitUntilServerLoadLimitRelease(){
    if(
        isServeLoadLimit()
    ){
        countWaitActionByServerLoad ++;
        
        while(isServeLoadLimit()){
            Wait(waitTime, WaitBehavior.IgnoreCondition);
        }
    }
}

// TAG ServerOverloadMeasures/ServerLoadLimit ----------
define serverLoadMax: 255;
define isServeLoadLimit(): serverLoadLimit <= ServerLoad();
define limitChangeUnit: 50;
define watchTimeLimitDecrease: 0.1;
define watchTimeLimitIncrease: 0.1;
define isServerOverload(): serverLoadMax <= ServerLoad();globalvar define serverLoadLimit = serverLoadMax;

rule: "ServerOverloadMeasures/ServerLoadLimit/decrease"
Event.OngoingGlobal
if(
    serverLoadLimit > 0 &&
    isServerOverload()
){
    Wait(watchTimeLimitDecrease, WaitBehavior.AbortWhenFalse);
    serverLoadLimit -= limitChangeUnit;
    if(serverLoadLimit < 0){
        serverLoadLimit = 0;
    }
    Loop();
}

rule: "ServerOverloadMeasures/ServerLoadLimit/increase"
Event.OngoingGlobal
if(
    serverLoadLimit < serverLoadMax &&
    !isServerOverload()
){
    Wait(watchTimeLimitIncrease, WaitBehavior.AbortWhenFalse);
    serverLoadLimit += limitChangeUnit;
    if(serverLoadLimit > serverLoadMax){
        serverLoadLimit = serverLoadMax;
    }
    Loop();
}

// TAG ServerOverloadMeasures/GameSpeed ----------
define gameSpeedMax: 100;
define watchTimeSpeedDecrease: 1.5;
define watchTimeSpeedIncrease: 1.5;
define speedChangeUnit: 10;
globalvar define gameSpeed = gameSpeedMax;
globalvar define countGameSpeedDecrease;

rule: "ServerOverloadMeasures/GameSpeed/decrease"
Event.OngoingGlobal
if(
    gameSpeed > 0 &&
    isServerOverload()
){
    Wait(watchTimeSpeedDecrease, WaitBehavior.AbortWhenFalse);
    gameSpeed -= speedChangeUnit;
    if(gameSpeed < 0){
        gameSpeed = 0;
    }
    SetSlowMotion(gameSpeed);
    countGameSpeedDecrease ++;
    Loop();
}

rule: "ServerOverloadMeasures/GameSpeed/increase"
Event.OngoingGlobal
if(
    gameSpeed < gameSpeedMax &&
    !isServerOverload()
){
    Wait(watchTimeSpeedIncrease, WaitBehavior.AbortWhenFalse);
    gameSpeed += speedChangeUnit;
    if(gameSpeed > gameSpeedMax){
        gameSpeed = gameSpeedMax;
    }
    SetSlowMotion(gameSpeed);
    Loop();
}

define forceTimeSpeedIncrease: 5.0;

rule: "ServerOverloadMeasures/GameSpeed/forceIncrease"
Event.OngoingGlobal
if(
    gameSpeed < gameSpeedMax &&
    !isServerOverload()
){
    Wait(forceTimeSpeedIncrease, WaitBehavior.IgnoreCondition);
    gameSpeed += speedChangeUnit;
    if(gameSpeed > gameSpeedMax){
        gameSpeed = gameSpeedMax;
    }
    SetSlowMotion(gameSpeed);
    Loop();
}

