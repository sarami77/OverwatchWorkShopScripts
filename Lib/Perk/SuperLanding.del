import "PerkCore.del";

define superLandingRange: 8;
define triggerCongition: 6 <= DistanceBetween(ep, BelowPosition(ep));

rule: "Perk/Player/SuperLanding/activate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.SuperLanding &&
    perkState  == PerkState.Using
){
    // set time limit
    perk[Perk.perkTimeLimit] = 300;
    // set param
    perk[Perk.perkEffectStatus] = PerkEffectStatus.Ready;
    perkPosition = 0;
    // set hud
    perk[Perk.perkEffectAndText] = [];
    CreatePerkEffectHud(<"Hold crouch button <0> in air to landing attack.", ButtonGuide(Button.Crouch)>);
    perk[Perk.perkEffectAndText] [0] = LastTextID();
    CreatePerkEffectHud(<"More hold jump button <0> to hovering.", ButtonGuide(Button.Jump)>);
    perk[Perk.perkEffectAndText] [1] = LastTextID();
    CreatePerkEffectHud(<"Hold jump button <0> to high jump.", ButtonGuide(Button.Jump)>);
    perk[Perk.perkEffectAndText] [2] = LastTextID();
    // set effect
    CreateEffect(
        triggerCongition ? ep : null, Effect.Ring, Color.White,
        BelowPosition(ep), superLandingRange, EffectRev.VisibleToPositionAndRadius);
    perk[Perk.perkEffectAndText] [3] = LastCreatedEntity();

}

rule: "Perk/Player/SuperLanding/deactivate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.SuperLanding &&
    perkState  == PerkState.Non
){
    // reset param
    StopCamera(ep);
    perkPosition = 0;
    // reset hud
    DestroyHudText(perk[Perk.perkEffectAndText][0]);
    DestroyHudText(perk[Perk.perkEffectAndText][1]);
    DestroyHudText(perk[Perk.perkEffectAndText][2]);
    DestroyEffect(perk[Perk.perkEffectAndText][3]);
    // reset status
    StopCamera(ep);
    SetMoveSpeed(ep, DefaultPercentage());
    SetAimSpeed(ep, DefaultPercentage());
    AllowButton(ep, Button.Jump);
    StopHoldingButton(ep, Button.Crouch);
    // reset type
    perkType = PerkType.Non;
}

rule: "Perk/Player/SuperLanding/highJump"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.SuperLanding &&
    perkState  == PerkState.Using &&
    perk[Perk.perkEffectStatus]  == PerkEffectStatus.Ready &&
    IsButtonHeld(ep, Button.Jump)
){
    WaitLongPressConfirm();
    ApplyImpulse(ep, Up(), 18,
        Relative.ToPlayer, ContraryMotion.Cancel);
    perk[Perk.perkEffectStatus] = PerkEffectStatus.Triggered;
}

rule: "Perk/Player/SuperLanding/hover"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.SuperLanding &&
    perkState  == PerkState.Using &&
    perk[Perk.perkEffectStatus]  == PerkEffectStatus.Triggered &&
    IsButtonHeld(ep, Button.Jump) &&
    !IsButtonHeld(ep, Button.Crouch)
){
    Wait(1, WaitBehavior.AbortWhenFalse);
    for(define hovringCount = 0; hovringCount < 50; hovringCount++){
        ApplyImpulse(ep, (Up() * 0.1), 1,
            Relative.ToPlayer, ContraryMotion.Cancel);
        // play blast
        PlayEffect(
            AllPlayers(), PlayEffect.GoodExplosion,
            Color.White, ep, 0.5);
        WaitApplyImpulseCycle();
    }
}

rule: "Perk/Player/SuperLanding/descent"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.SuperLanding &&
    perkState  == PerkState.Using &&
    IsButtonHeld(ep, Button.Crouch)
){
    WaitLongPressConfirm();
    AbortIf(!triggerCongition);
    perkPosition = BlockedPositon(
        EyePosition(), -VectorWithOutY(FacingDirectionOf()), 8);
    ApplyImpulse(ep, Down(), MaxValue(),
        Relative.ToPlayer, ContraryMotion.Cancel);

    StartCamera(ep, perkPosition, BelowPosition(ep), MaxValue());
    SetMoveSpeed(ep, 0);
    SetAimSpeed(ep, 0);
    DisallowButton(ep, Button.Jump);
    StartHoldingButton(ep, Button.Crouch);

    perk[Perk.perkEffectStatus] = PerkEffectStatus.SecondTriggered;
}

rule: "Perk/Player/SuperLanding/landing"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.SuperLanding &&
    perkState  == PerkState.Using &&
    perk[Perk.perkEffectStatus]  == PerkEffectStatus.SecondTriggered &&
    IsOnGround()
){
    // get target
    perk[Perk.perkTargets] = PlayersWithinRadius(
        PositionOf(), superLandingRange, Team.Team2, RadiusLOS.Off);
    // apply blast impulse
    ApplyBlastImpulse(perk[Perk.perkTargets], PositionOf(), superLandingRange);
    // splash damage
    Damage(perk[Perk.perkTargets], ep, 300);
    SetStatus(perk[Perk.perkTargets], ep, Status.KnockedDown, 5);
    // play blast sound
    PlayEffect(
        AllPlayers(), PlayEffect.RingExplosionSound,
        Color.White, PositionOf(), 200);
    // play big blast with sound
    PlayContinuousBlast(
        Color.White,
        PositionOf(),
        superLandingRange,
        2,
        2);

    Wait(1.0, WaitBehavior.IgnoreCondition);

    StopCamera(ep);
    SetMoveSpeed(ep, DefaultPercentage());
    SetAimSpeed(ep, DefaultPercentage());
    AllowButton(ep, Button.Jump);
    StopHoldingButton(ep, Button.Crouch);

    perk[Perk.perkEffectStatus] = PerkEffectStatus.Ready;
}

rule: "Perk/Player/SuperLanding/resetUsedFlagOnHighJump"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.SuperLanding &&
    perkState  == PerkState.Using &&
    perk[Perk.perkEffectStatus]  == PerkEffectStatus.Triggered &&
    IsOnGround()
){
    perk[Perk.perkEffectStatus] = PerkEffectStatus.Ready;
}