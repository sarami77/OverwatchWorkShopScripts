import "PerkCore.del";

// TAG CarePackage ----------
rule: "Perk/Player/CarePackage/activate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.CarePackage &&
    perkState  == PerkState.Using
){
    // set time limit
    perk[Perk.perkTimeLimit] = 7;
    // set param
    perk[Perk.perkEffectStatus] = 0;
    // show text
    // landing zone text
    perk[Perk.perkEffectAndText] = [];
    CreateInWorldText(
        AllPlayers(), <"<0> <1> <2>\n\rArrival in <3> second. Stand by...", ep, HeroIconString(HeroOf()), "Care Package", perk[Perk.perkTimeLimit] >,
        landPosition + PositionOffset(), 1, Clipping.DoNotClip, InworldTextRev.VisibleToPositionAndString,
        Color.White, Spectators.DefaultVisibility);
    perk[Perk.perkEffectAndText] [0] = LastTextID();
    perk[Perk.perkEffectAndText] [1] = LastTextID();
    // set effect
    // package body
    CreateEffect(AllPlayers(), Effect.Orb, Color.Turquoise,
        perkPosition, 1, EffectRev.VisibleToPositionAndRadius);
    perk[Perk.perkEffectAndText] [2] = LastCreatedEntity();
    // package flare
    CreateEffect(AllPlayers(), Effect.GoodAura, Color.White,
        perkPosition, 5, EffectRev.VisibleToPositionAndRadius);
    perk[Perk.perkEffectAndText] [3] = LastCreatedEntity();
    // package sound
    CreateEffect(AllPlayers(), Effect.BadAuraSound, Color.White,
        perkPosition, MaxLength(), EffectRev.VisibleToPositionAndRadius);
    perk[Perk.perkEffectAndText] [4] = LastCreatedEntity();
    // landing zone smoke
    CreateEffect(AllPlayers(), Effect.Cloud, Color.Turquoise,
        landPosition, 5, EffectRev.VisibleToPositionAndRadius);
    perk[Perk.perkEffectAndText] [5] = LastCreatedEntity();
    // landing zone light shaft
    CreateEffect(AllPlayers(), Effect.LightShaft, Color.Turquoise,
        landPosition, 0.1, EffectRev.VisibleToPositionAndRadius);
    perk[Perk.perkEffectAndText] [6] = LastCreatedEntity();
    // landing zone check icon
    CreateIcon(AllPlayers(), landPosition + (Up() * 2), Icon.Heart,
        IconRev.VisibleToAndPosition, Color.Turquoise, true);
    perk[Perk.perkEffectAndText] [7] = LastCreatedEntity();
}

rule: "Perk/Player/CarePackage/deactivate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.CarePackage &&
    perkState  == PerkState.Non
){
    // reset text
    DestroyInWorldText(perk[Perk.perkEffectAndText] [0]);
    DestroyInWorldText(perk[Perk.perkEffectAndText] [1]);
    // reset effect
    DestroyEffect(perk[Perk.perkEffectAndText] [2]);
    DestroyEffect(perk[Perk.perkEffectAndText] [3]);
    DestroyEffect(perk[Perk.perkEffectAndText] [4]);
    DestroyEffect(perk[Perk.perkEffectAndText] [5]);
    DestroyEffect(perk[Perk.perkEffectAndText] [6]);
    StopChasingVariable(perkPosition);
    // reset icon
    DestroyIcon(perk[Perk.perkEffectAndText] [7]);
    // reset type
    perkType = PerkType.Non;
}

rule: "Perk/Player/CarePackage/playTrajectory"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.CarePackage &&
    perkState  == PerkState.Using
){
    // play blast
    PlayEffect(
        AllPlayers(), PlayEffect.BadExplosion,
        Color.Orange, perkPosition, 1.0);

    WaitUpdateVeryShortCycle();
    LoopIfConditionIsTrue();
}

rule: "Perk/Player/CarePackage/dropPackage"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.CarePackage &&
    perkState  == PerkState.Using
){
    // set package at horizontal positions over 250
    perkPosition = ep +
        Vector(0, 125, 0) + RandomPosition(0, 0, 0);
    // set package land position to player position
    landPosition = BelowPosition(ep);
    // start package move
    if(!isServerOverLoading){
        UpdateEveryFrame(perkPosition);
        ChaseVariableOverTime(
            perkPosition, landPosition, perk[Perk.perkTimeLimit] ,
            TimeChaseReevaluation.DestinationAndDuration);
    }
}

rule: "Perk/Player/CarePackage/landedToPoint"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.CarePackage &&
    perkState  == PerkState.Using &&
    perk[Perk.perkTimeLimit]  <= 0
){
    StopChasingVariable(perkPosition);

    // play landing effect
    PlayEffect(
        AllPlayers(), PlayEffect.RingExplosion,
        Color.Turquoise, perkPosition, 10);
    PlayEffect(
        AllPlayers(), PlayEffect.GoodExplosion,
        Color.Turquoise, perkPosition, 10);
    PlayEffect(
        AllPlayers(), PlayEffect.RingExplosionSound,
        Color.White, perkPosition, MaxLength());
    
    // set perk crate count from player count
    perk[Perk.perkTargets] = RandomizedArray(AllPlayers(Team.Team1));
    perk[Perk.perkEffectStatus] = CountOf(perk[Perk.perkTargets]);
    // set perk crate position to around of landPosition
    for(pLoopIndex = 0; pLoopIndex < perk[Perk.perkEffectStatus]; pLoopIndex++){
        perk[Perk.perkTargets][pLoopIndex].perk[Perk.perkCratePosition]
            = NearestWalkablePosition(landPosition + RandomPosition(3, 0, 3)) + PositionOffset();    
        perk[Perk.perkTargets][pLoopIndex].perk[Perk.perkCrateState] = PerkCrateState.Dropped;
    }
    perkState = PerkState.Non;
}
