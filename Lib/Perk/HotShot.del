import "PerkCore.del";

rule: "Perk/Player/HotShot/activate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.HotShot &&
    perkState  == PerkState.Using
){
    // set time limit
    perk[Perk.perkTimeLimit] = 300;
}

rule: "Perk/Player/HotShot/deactivate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.HotShot &&
    perkState  == PerkState.Non
){
    // reset type
    perkType = PerkType.Non;
}

rule: "Perk/Player/HotShot/refillAbilityAndAmmo"
Event.OnFinalBlow
Team.Team1
if(
    perkType == PerkType.HotShot &&
    perkState  == PerkState.Using
){
    Wait(0.75, WaitBehavior.AbortWhenFalse);

    define clips = [0, 1];
    for(define idx = 0; idx < CountOf(clips); idx++){
        SetAmmo(ep, clips[idx], MaxAmmo(ep, clips[idx]));
    }
    
    define buttons = [
        Button.PrimaryFire,
        Button.SecondaryFire,
        Button.Ability1,
        Button.Ability2, 
        Button.Jump,
        Button.Crouch
    ];
    for(define idx = 0; idx < CountOf(buttons); idx++){
        SetAbilityCooldown(ep, buttons[idx], 0);
        SetAbilityCharge(ep, buttons[idx], 3);
        SetAbilityResource(ep, buttons[idx], 100);
    }
}
