import "PerkCore.del";

define adrenalineMaxPercentage : 300;

rule: "Perk/Player/Adrenaline/activate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.Adrenaline &&
    perkState  == PerkState.Using
){
    // set time limit
    perkTimeLimit = 300;
    // set param
    perkEffectStatus = DefaultPercentage();
    // set hud
    perkEffectAndText = [];
    CreatePerkEffectHud(<"Damage dealt & Moving speed <0>%", perkEffectStatus >);
    perkEffectAndText [0] = LastTextID();
}

rule: "Perk/Player/Adrenaline/deactivate"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.Adrenaline &&
    perkState  == PerkState.Non
){
    // reset hud
    DestroyHudText(perkEffectAndText [0]);
    // reset status
    SetMoveSpeed(ep, DefaultPercentage());
    SetDamageDealt(ep, DefaultPercentage());
    // reset type
    perkType = PerkType.Non;
}

rule: "Perk/Player/Adrenaline/updateMoveSpeed"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.Adrenaline &&
    perkState  == PerkState.Using &&    
    Health() < MaxHealth()
){
    perkEffectStatus = DefaultPercentage();
    perkEffectStatus += RoundToInteger((1 - NormalizedHealth()) * (adrenalineMaxPercentage - DefaultPercentage()));
    SetMoveSpeed(ep, perkEffectStatus);
    SetDamageDealt(ep, perkEffectStatus);
    Wait(0.5, WaitBehavior.AbortWhenFalse);
    LoopIfConditionIsTrue();
}

rule: "Perk/Player/Adrenaline/resetMoveSpeedByFullHealth"
Event.OngoingPlayer
Team.Team1
if(
    perkType == PerkType.Adrenaline &&
    perkState  == PerkState.Using &&
    Health() == MaxHealth()
){
    perkEffectStatus = DefaultPercentage();
    SetMoveSpeed(ep, DefaultPercentage());
    SetDamageDealt(ep, DefaultPercentage());
}
